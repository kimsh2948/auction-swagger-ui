openapi: 3.0.0
info:
  title: Auction Platform API
  version: 1.0.0
  description: API documentation for various features of the auction platform, including prize events, auctions, and chat services.

servers:
  - url: http://<<URL>>/api
    description: Development server

paths:
  /oauth2/token:
    post: 
      tags:
        - Login
      summary: Authorization Code를 사용한 회원가입 및 로그인
      description: 로그인 처리 후 Access_Token과 Refresh_Token을 Json형식으로 반환
      parameters:
        - name: code
          in: query
          required: true
          schema:
            type: string
          description: Authorization Code (지금은 네이버만)
      responses:
        '200':
          description: 엑세스 토큰과 리프레쉬 토큰 정보를 반환합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
                
  /oauth2/user:
    post: 
      tags:
        - Login
      summary: Access_Token을 사용한 유저 정보 조회
      description: Access_Token을 받아 해당 유저의 정보를 반환
      parameters:
        - name: Authorization
          in: header        
          required: true
          schema:
            type: string
          description: Access_Token
      responses:
        '200':
          description: 유저 정보를 반환합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: 엑세스 토큰 만료
          content:
            application/json:               # content 내에 schema 정의
              schema:
                properties:
                  ok:
                    type: boolean
                  errorMessage:
                    type: string
                
  /oauth2/restore:
    post: 
      tags:
        - Login
      summary: Refresh_Token를 사용해 Access_Token과 Refresh_Token을 갱신합니다.
      description: Refresh_Token을 받아 Access_Token과 Refresh_Token을 Json형식으로 반환
      parameters:
        - name: Authorization
          in: header
          required: true
          schema:
            type: string
          description: Refresh_Token
      responses:
        '200':
          description: 새로 갱신된 엑세스 토큰과 리프레쉬 토큰을 반환합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restore'
  /api/auctions:
    post:
      tags:
        - Auction
      summary: 경매 물품 등록
      description: 네이버 로그인한 사용자가 새로운 경매 물품을 등록합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 경매 제목
                  example: 롤렉스 서브마린팝니다! 많은 관심 부탁드려요.
                name:
                  type: string
                  description: 물품 이름
                  example: 롤렉스 서브마린
                description:
                  type: string
                  description: 물품 설명
                  example: 해당 물품은 롤렉스 서브마린 블루라인으로써 ........
                quantity:
                  type: integer
                  description: 물품 수량
                  example: 1
                startPrice:
                  type: integer
                  description: 물품 시작 입찰가
                  example: 1000000
                resisteredUserId:
                  type: number
                  format: int64
                  description: 물품 등록 유저 아이디
                  example: 1
                winningUserId:
                  type: number
                  format: int64
                  description: 물품 낙찰 유저 아이디
                  example: 3
                winningUserComment:
                  type: string
                  description: 물품 낙찰 유저 코멘트
                endTime:
                  type: string
                  format: date-time
                  description: 경매 마감 시간 (ISO 8601 형식)
                itemImage:
                  type: array
                  items:
                    type: string
                  description: 물품 사진 byte[] 배열
                  example: [
                    "바이트코드 문자열",
                    "바이트코드 문자열"
                  ]
                
                  
      responses:
        '200':
          description: 성공적으로 물품이 등록되었습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auction'

  /api/auctions/{id}:
    get:
      tags:
        - Auction
      summary: 경매 게시물 조회
      description: 경매 게시판의 특정 글을 조회합니다.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: 경매 ID
      responses:
        '200':
          description: 경매 정보를 반환합니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuctionDetail'

  /api/auctions/bids/{id}:
    post:
      tags:
        - Auction
      summary: 경매 입찰
      description: 네이버 로그인한 사용자가 경매에 입찰합니다.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: 경매 ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bidAmount:
                  type: integer
                  description: 입찰 금액
                comment:
                  type: string
                  description: 입찰자의 코멘트
      responses:
        '200':
          description: 성공적으로 입찰이 등록되었습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bid'

  /api/auctions/close/{id}:
    post:
      tags:
        - Auction
      summary: 경매 마감
      description: 경매를 마감하고 낙찰자를 결정합니다.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: 경매 ID
      responses:
        '200':
          description: 경매가 마감되고 낙찰자가 결정되었습니다.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuctionResult'
                
                
  /auction/list/open:
    get:
      tags:
        - Auction
      summary: 진행 중인 경매 리스트 조회
      description: 진행 중인 경매의 리스트를 조회합니다.
      responses:
        '200':
          description: 성공적으로 경매 리스트를 조회했습니다.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpenAuctionList'
        '400':
          description: 경매 리스트 조회 중 오류 발생
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "경매 리스트 조회 오류"
                    
  /auction/list/closed:
    get:
      tags:
        - Auction
      summary: 종료된 경매 리스트 조회
      description: 종료된 경매의 리스트를 조회합니다.
      responses:
        '200':
          description: 성공적으로 종료된 경매 리스트를 조회했습니다.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClosedAuctionList'
        '400':
          description: 종료된 경매 리스트 조회 중 오류 발생
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "종료된 경매 리스트 조회 오류"

                  
  /prizes:
    post:
      tags:
        - Prize Event
      summary: Create a new prize
      description: 관리자에 의해 새로운 경품을 등록합니다.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 경품 이름
                description:
                  type: string
                  description: 경품 설명
                quantity:
                  type: integer
                  description: 총 경품 수량
                start_time:
                  type: string
                  format: date-time
                  description: 응모 시작 시간
              required:
                - name
                - quantity
                - start_time
      responses:
        '200':
          description: Prize created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prize'

    get:
      tags:
        - Prize Event
      summary: Get all prizes
      description: 등록된 모든 경품을 조회합니다.
      responses:
        '200':
          description: Prizes retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Prize'

  /prizes/{prize_id}:
    get:
      tags:
        - Prize Event
      summary: Get prize details
      description: 특정 경품의 정보를 조회합니다.
      parameters:
        - in: path
          name: prize_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Prize details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Prize'

  /prizes/{prize_id}/entries:
    post:
      tags:
        - Prize Event
      summary: Submit an entry for a prize
      description: 사용자가 특정 경품에 응모합니다.
      parameters:
        - in: path
          name: prize_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 응모하는 사용자의 ID
              required:
                - user_id
      responses:
        '200':
          description: Entry created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'

  /prizes/{prize_id}/winners:
    post:
      tags:
        - Prize Event
      summary: Register a winner for a prize
      description: 경품 응모자 중 당첨자를 추첨합니다.
      parameters:
        - in: path
          name: prize_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: 당첨된 사용자의 ID
              required:
                - user_id
      responses:
        '200':
          description: Winner registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Winner'

    get:
      tags:
        - Prize Event
      summary: Get all winners for a prize
      description: 특정 경품의 당첨자를 조회합니다.
      parameters:
        - in: path
          name: prize_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Winners retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Winner'

  /users/{user_id}/winners:
    get:
      tags:
        - Prize Event
      summary: Get user's winning records
      description: 특정 사용자의 당첨 기록을 조회합니다.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Winning records retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Winner'

  /api/chats:
    post:
      tags:
          - Chat Management
      summary: Create a new chat room
      description: Create a chat room between the seller and the buyer after an auction is won.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: string
                seller_id:
                  type: string
                buyer_id:
                  type: string
              required:
                - item_id
                - seller_id
                - buyer_id
      responses:
        '200':
          description: Chat room created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chat_id:
                    type: string
                  status:
                    type: string
                    enum: [active]
                  created_at:
                    type: string
                    format: date-time

  /api/chats/{chat_id}/status:
    patch:
      tags:
          - Chat Management
      summary: Update chat room status
      description: Update the status of a chat room when the transaction is completed or canceled.
      parameters:
        - in: path
          name: chat_id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [completed, inactive]
      responses:
        '200':
          description: Chat room status updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chat_id:
                    type: string
                  status:
                    type: string
                    enum: [completed, inactive]

  /api/chats/{chat_id}:
    get:
      tags:
          - Chat Management
      summary: Get chat room details
      description: Retrieve details of a specific chat room.
      parameters:
        - in: path
          name: chat_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Chat room details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chat_id:
                    type: string
                  item_id:
                    type: string
                  seller_id:
                    type: string
                  buyer_id:
                    type: string
                  status:
                    type: string
                    enum: [active, completed, inactive]
                  created_at:
                    type: string
                    format: date-time

  /api/chats/{chat_id}/messages:
    get:
      tags:
          - Chat Management
      summary: Get messages in chat room
      description: Retrieve messages in a specific chat room with pagination.
      parameters:
        - in: path
          name: chat_id
          required: true
          schema:
            type: string
        - in: query
          name: page
          schema:
            type: integer
            default: 1
        - in: query
          name: limit
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Messages retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chat_id:
                    type: string
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        message_id:
                          type: string
                        sender_id:
                          type: string
                        message_text:
                          type: string
                        sent_at:
                          type: string
                          format: date-time
                        is_read:
                          type: boolean
                  page:
                    type: integer
                  limit:
                    type: integer
                  total_messages:
                    type: integer

  /users/{user_id}/chats:
    get:
      tags:
          - Chat Management
      summary: Get chat rooms for a user
      description: Retrieve the list of chat rooms that a specific user is participating in.
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Chat rooms retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: string
                  chats:
                    type: array
                    items:
                      type: object
                      properties:
                        chat_id:
                          type: string
                        item_id:
                          type: string
                        seller_id:
                          type: string
                        buyer_id:
                          type: string
                        status:
                          type: string
                          enum: [active, completed, inactive]
                        created_at:
                          type: string
                          format: date-time

components:
  schemas:
    Token:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    User:
      type: object
      properties:
        username:
          type: string
        name:
          type: string
        password:
          type: string
        email:
          type: string
        role:
          type: string
        provider:
          type: string
        createDate:
          type: string
          format: date-time
          example: 2024-10-10T00:00:00Z
    Restore:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    Prize:
      type: object
      properties:
        prize_id:
          type: integer
        name:
          type: string
        description:
          type: string
        quantity:
          type: integer
        start_time:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    Entry:
      type: object
      properties:
        entry_id:
          type: integer
        user_id:
          type: integer
        prize_id:
          type: integer
        entry_time:
          type: string
          format: date-time

    Winner:
      type: object
      properties:
        winner_id:
          type: integer
        user_id:
          type: integer
        prize_id:
          type: integer
        winning_time:
          type: string
          format: date-time

    ChatRoom:
      type: object
      properties:
        chat_id:
          type: string
        item_id:
          type: string
        seller_id:
          type: string
        buyer_id:
          type: string
        status:
          type: string
          enum: [active, completed, inactive]
        created_at:
          type: string
          format: date-time

    Message:
      type: object
      properties:
        message_id:
          type: string
        chat_id:
          type: string
        sender_id:
          type: string
        message_text:
          type: string
        sent_at:
          type: string
          format: date-time
        is_read:
          type: boolean

    UserChat:
      type: object
      properties:
        user_id:
          type: string
        chats:
          type: array
          items:
            $ref: '#/components/schemas/ChatRoom'

    Auction:
      type: object
      properties:
        message:
          type: string
          example: "경매 등록 성공"
          
    AuctionDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 경매 ID
          example: 1
        title:
          type: string
          description: 경매 제목
          example: "고급 시계"
        name:
          type: string
          description: 물품 이름
          example: "롤렉스 서브마리너"
        description:
          type: string
          description: 물품 설명
          example: "상태가 매우 좋은 롤렉스 서브마리너입니다."
        quantity:
          type: integer
          description: 물품 수량
          example: 1
        startPrice:
          type: string
          description: 물품 시작 입찰가
          example: "1000000"
        createDate:
          type: string
          format: date-time
          description: 경매 생성 날짜
          example: "2023-10-01T12:00:00"
        endDate:
          type: string
          format: date-time
          description: 경매 종료 날짜
          example: "2023-12-31T23:59:59"
        registeredUserId:
          type: integer
          format: int64
          description: 물품 등록 유저 ID
          example: 12345
        winningUserId:
          type: integer
          format: int64
          description: 물품 낙찰 유저 ID
          example: 67890
        winningUserComment:
          type: string
          description: 물품 낙찰 유저 코멘트
          example: "정말 멋진 물품입니다!"
        closedAuction:
          type: string
          description: 경매 종료 여부
          example: "false" # true 또는 false로 나타낼 수 있습니다.
        images:
          type: array
          items:
            type: string
          description: 물품 이미지 리스트
          example: [
                    "NCP 저장소 이미지 URL",
                    "NCP 저장소 이미지 URL"
                  ]
      

    Bid:
      type: object
      properties:
        id:
          type: integer
        auctionId:
          type: integer
        userId:
          type: integer
        bidAmount:
          type: integer
        comment:
          type: string

    AuctionResult:
      type: object
      properties:
        auctionId:
          type: integer
        winnerId:
          type: integer
        winningBid:
          type: integer
    OpenAuctionList:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 경매 ID
          example: 1
        title:
          type: string
          description: 경매 제목
          example: "롤렉스 서브마린팝니다! 많은 관심 부탁드려요."
        name:
          type: string
          description: 물품 이름
          example: "롤렉스 서브마린"
        description:
          type: string
          description: 물품 설명
          example: "해당 물품은 롤렉스 서브마린 블루라인으로써 ........"
        quantity:
          type: integer
          description: 물품 수량
          example: 1
        startPrice:
          type: string
          description: 물품 시작 입찰가
          example: "1000000"
        createDate:
          type: string
          format: date-time
          description: 경매 생성 날짜
          example: "2023-10-01T12:00:00"
        endDate:
          type: string
          format: date-time
          description: 경매 종료 날짜
          example: "2023-12-31T23:59:59"
        resisteredUserId:
          type: integer
          format: int64
          description: 물품 등록 유저 ID
          example: 12345
        winningUserId:
          type: integer
          format: int64
          description: 물품 낙찰 유저 ID
          example: 67890
        winningUserComment:
          type: string
          description: 물품 낙찰 유저 코멘트
          example: "정말 멋진 물품입니다!"
        closedAuction:
          type: string
          description: 경매 종료 여부
          example: "NO"
    ClosedAuctionList:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: 경매 ID
          example: 1
        title:
          type: string
          description: 경매 제목
          example: "롤렉스 서브마린팝니다! 많은 관심 부탁드려요."
        name:
          type: string
          description: 물품 이름
          example: "롤렉스 서브마린"
        description:
          type: string
          description: 물품 설명
          example: "해당 물품은 롤렉스 서브마린 블루라인으로써 ........"
        quantity:
          type: integer
          description: 물품 수량
          example: 1
        startPrice:
          type: string
          description: 물품 시작 입찰가
          example: "1000000"
        createDate:
          type: string
          format: date-time
          description: 경매 생성 날짜
          example: "2023-10-01T12:00:00"
        endDate:
          type: string
          format: date-time
          description: 경매 종료 날짜
          example: "2023-12-31T23:59:59"
        resisteredUserId:
          type: integer
          format: int64
          description: 물품 등록 유저 ID
          example: 12345
        winningUserId:
          type: integer
          format: int64
          description: 물품 낙찰 유저 ID
          example: 67890
        winningUserComment:
          type: string
          description: 물품 낙찰 유저 코멘트
          example: "정말 멋진 물품입니다!"
        closedAuction:
          type: string
          description: 경매 종료 여부
          example: "YES"
